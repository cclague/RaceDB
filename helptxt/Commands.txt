[TOC]

# Commands

All commands can be run in the form:

    python cmd <parameters>

## Data Initialization

### init_usac <filename.csv>
Reads a usac .csv formatted data dump.

### init_ccn <spreadsheet.xlsx>
Reads a ccn (Canadian Cycling) formatted spreadsheet.  This command looks for the sheet ending in "CCN" and reads it.
It initialized riders using the "Licence Numbers" as the key.
If is OK to run this command multiple times on the same data. If the license numbers exist already, the data will be updated.  If they don't exist,
they will be created.

### init_prereg <spreadsheet.xlsx>

Initialize Pre-registered riders for a race.  For details, do:

    python manage.py init_prereg --help

This command creates Participant records for a Competition.  The Participant records link LicenseHolders, Categories and Teams together.
This command does not create LicenseHolder records or Teams.

This command finds LicenseHolders by a specified License Number, or by doing a lookup by LastName and FirstName.  Using the License Code is much more reliable - if the names are spelled incorrectly, or there are riders with the same name, this will fail.

Column|Description
------|-----------
License Numbers|Optional.  If present, and if there is a license code, it will be used to match the LicenseHolder.
First Name|Optional.  If present, and there is no License code, this will be combined with the Last Name to search for the LicenseHolder
Last Name|Optional.  If present, and there is no License code, this will be combined with the First Name to search for the LicenseHolder
Team|Optional.  If present, this will be used to find the team.  The name must match 100% correctly
Category|Optional.  If present, this is used to find the Category of the rider.  This must match one of the Category names of the CategoryFormat assigned to the race.
Bib|Optional.  If present, this will initialize the Bib of the Participant.  If the Competition has the "Use Existing Bib" flag set, this will also change the "Existing Bib" in the LicenseHolder record.
Tag{Optional. If present, this will initialize the Tag of the Participant.  If the Competition has the "Use Existing Tag" flag set, this will also change the "Existing Tag" in the LicenseHolder record.

## Database Commands

### dumpdata

Creates an extract for all the data in the RaceDB database in various formats, including json and xml.
For details, see [the Django docs.](https://docs.djangoproject.com/en/1.6/ref/django-admin/#dumpdata-app-label-app-label-app-label-model)

This can be useful for backups, or to move an entire dataset from one database to another.

### loaddata

Imports data previously extracted with dumpdata.
For details, see [the Django docs.](https://docs.djangoproject.com/en/1.6/ref/django-admin/#loaddata-fixture-fixture).

### dbshell

Gives you command-line access to the database so you can type in SQL statements.  You need to have installed sqlite for this to work.
For details, see [the Django docs.](https://docs.djangoproject.com/en/1.6/ref/django-admin/#dbshell).
